
from django import forms
from django.shortcuts import render
from .models import Book, Destiny
from .forms import Booking
from django.http import HttpResponseRedirect,request
from django.urls import reverse


import datetime




# Create your views here.
def Home (request):
    return render(request, 'flight_app/Home.html')



def link_3 (request):
    return render(request, 'flight_app/link_3.html')

def contact_us (request):
    return render(request, 'flight_app/contact_us.html')

def FAQ (request):
    return render(request, 'flight_app/FAQ.html')




# Create your views here.
def add_booking(request):

    page_data = {'myform': Booking(), }
    return render(request, 'flight_app/add_booking.html', page_data)


def add_booking_submit(request):
    if request.method != 'POST':
        return HttpResponseRedirect('flight_app/add/booking/')
    else:
        page_data = {}
        form = Booking(request.POST)
        if form.is_valid():
            save_new_booking(form)
            return  render(request, 'flight_app/done.html', page_data)
            # do something with the data
        else:
            page_data = {'val_errors': form.errors, }

    return render(request, 'flight_app/done.html', page_data)

def save_new_booking(form):
    new_pub_object = form.save()

 

def edit_booking(request, key=15):
     pubtub = Book.objects.get(id=int(key))

     if request.method == 'POST':
        # do something
        form = Booking(request.POST, instance=pubtub)
        if form.is_valid() != True:
            # Validation failed. Redisplay the form.
            page_data = {'myform': form, }
        else:
            # Validation passed. Save the data.
            form.save()
            page_data = {'val_errors': form.errors, }
            return  render(request, 'flight_app/done.html', page_data)
     else:
        # This request is not generated by a form's Submit button.
        # Display the Form containing the queried record.
        form = Booking(instance=pubtub)
        page_data = {'myform': form,}

     return render(request, 'flight_app/edit_booking.html', page_data)


def delete_booking(request, key=9):
     pub = Book.objects.get(id=int(key))

     if request.method == 'POST':
        pub.delete()
        page_data ={
             'myform':form,
         }
        return render(request, 'flight_app/add_booking.html',page_data)
     else:
         form = Booking(instance=pub)
         page_data ={
             'myform':form,
         }
     return render(request, 'flight_app/delete_booking.html',page_data)











